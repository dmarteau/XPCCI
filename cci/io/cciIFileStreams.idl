/*
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# The Original Code is Daim code.
#
# The Initial Developer of the Original Code is
#   David Marteau
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   David Marteau (dhmarteau@gmail.com)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****
*/

#include "cciIStreams.idl"

%{C++
#include <stdio.h>
%}

[ptr] native FILE(FILE);

[uuid(ae11cb50-77ba-4be3-9031-0835049658d4)]
interface cciIFileInputStream : cciIInputStream
{
  void init( in string spec, in dm_uint32 ioFlags, in dm_uint32 perm, in dm_uint32 behavior);

  [notxpcom] FILE getANSIFileDesc();
};


[uuid(b7ae67a3-6e32-4fcd-a0f0-2a4e29dfab8a)]
interface cciIFileOutputStream : cciIOutputStream
{
  void init( in string spec, in dm_uint32 ioFlags, in dm_uint32 perm, in dm_uint32 behaviors);

  [notxpcom] FILE getANSIFileDesc();
};


%{C++

#define CCI_FILE_IO_APPEND 0x01

//#ifdef DM_BUILD

cci_result CCI_NewFileInputStream( cciIFileInputStream** result,
                                   const char* spec,
                                   dm_uint32 ioFlags = 0,
                                   dm_uint32 perm = 0, dm_uint32 behavior = 0 );

cci_result CCI_NewFileOutputStream( cciIFileOutputStream** result,
                                    const char* spec,
                                    dm_uint32 ioFlags = 0,
                                    dm_uint32 perm = 0, dm_uint32 behavior = 0);
//#endif // DM_BUILD
%}
